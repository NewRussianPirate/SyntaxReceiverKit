using SomeNamespace;
using SpecialAttributes;

namespace ConsoleApp1
{
    //Post-initialization attribute of CommonGenerator (SpecialAttributes.g.cs). Generate additional property for class
    [SpecialClass]
    public partial class MyClass
    {
        //Post-initialization attribute of CommonGenerator (SpecialAttributes.g.cs). Generate implementation for partial static method.
        [SpecialMethod]
        public static partial void Foo();
    }

    public partial class MyClass1
    {
        [SpecialMethod]
        public static partial void Foo();

        [SpecialMethod]
        public static partial void UniqueMethod();
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            //--------------CommonGeneratorExample-------------//
            var myClass = new MyClass();
            Console.WriteLine(myClass.AutoGeneratedProperty);
            MyClass.Foo();
            MyClass1.Foo();
            MyClass1.UniqueMethod();
            //-------------------------------------------------//

            //-----------InterfaceSrcGeneratorExample----------//
            ClassWithInterface classWIface = new();
            SecondClassWithInterface secondClassWIface = new();
            ClassWithAnotherInterface classWithAnotherIFace = new();
            ClassWithBothIfaces classWithBoth = new();
            Console.WriteLine(classWIface.GeneratedProperty);
            Console.WriteLine(secondClassWIface.GeneratedProperty);
            Console.WriteLine(classWithAnotherIFace.AnotherGeneratedProperty);
            Console.WriteLine(classWithBoth.GeneratedProperty);
            Console.WriteLine(classWithBoth.AnotherGeneratedProperty);
            //-------------------------------------------------//
        }
    }
}